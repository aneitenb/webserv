# listen 				- What port to listen (8000 - 8999)
# host 					- What IP address
# server_name 			- example.com www.example.com
# max_client_body_size 	- The max size of a clients body
# error_page			- Custom error pages, error code and absolut path to .html file
# root 					- The path to the base directory for all locations
# methods 				- Allowed methods at in that location
# cgi_path			 	- The path for cgi interpreter
# autoindex 			- If the directory listing(autoindex) is on/off
# upload_store 			- A specific upload directory, has to be inside home(/) (optional)
# return 				- Redirection
# index 				- Default index page

# All directives end with a ';' (server and location does not)
# Server level directives include :
#    listen, host, server_name, client_max_body_size, error_page, root, index, allowed_methods
# Location level directives include :
#    autoindex, cgi_pass, cgi_param, upload_store, alilas, return, root, index, allowed_methods


server {
	listen 8080;				# Port
	host 127.0.0.1;				# Host: IP address to bind to, this one only access local connections
	server_name example.com;	# Optional domain name
	client_max_body_size 10m;	# Limit client body size
	root webpage;				# Base directory for all locations 

	# Default error pages
	error_page 404 /errors/404.html;
	error_page 500 /errors/500.html;

	#Route configuration
	location /uploads {
		allowed_methods POST;		# Required HTTP methods
		upload_store /uploads;		# Where to store uploaded files
		autoindex on;				# Directory listing on/off
		index index.html;			# Default files for directories
	}

	# Redirections
	# Matches any URL starting with /redirect
	# return can be used for either 301 (permanent) or 302 (temporary) redirects)
	location /redirect/ {
		return 301 http://example.com;		# HTTP redirection
	}

	# Matches exact URL /blog.php
	# OLD URL: www.example.com/blog.php
	# NEW URL: www.example.com/articles/blog
	location /blog.php {
		return 301 /articles/blog;		# HTTP redirection
	}

	# Directory Routing:
	# The 'alias' directive replaces the matched URI portion with the specified path
	# Example: if request is '/replace/pouic/toto/pouet'
	# - The '/replace' portion is replaced with '/tmp/www'
	# - Resulting file path: '/tmp/www/pouic/toto/pouet'
	location /replace {
        alias /tmp/www;  # Custom root directory, required
        autoindex off;
        index index.html;
    }

	# CGI (Common Gateway Interface) Configuration:
	# Directive explanations:
	# - cgi_pass: Specifies the CGI executable that will process the matched files
	# - cgi_param: Sets environment variables for the CGI program:
	#   * SCRIPT_FILENAME: Full path to the script being executed
	#   * PATH_INFO: Contains the path after the script name in the URL
	#     Example: for request '/cgi-bin/script.php/users/profile/123'
	#     - Full path to script: '/var/www/scripts/cgi-bin/script.php' (from $document_root$fastcgi_script_name)
	#     - PATH_INFO: '/users/profile/123' (everything after script.php)
    location /cgi {
        cgi_pass /usr/bin/php-cgi;
        allowed_methods GET POST;
    }

    # Python handling - we will choose one or the other (python/php)
	# the "~" means "use regular expression matching"
	# the "\.py$" is a regex pattern that matches ANY path ENDING WITH($) ".py"
    location /cgipy/ {
        cgi_pass /usr/bin/python3;
        allowed_methods GET POST;
    }
}


# Second server block - different port
server {
	listen 9090;
	host 127.0.0.1;				#same as localhost
	server_name site2.com;
	client_max_body_size 1;
	root webpage;

	location / {
		allowed_methods GET;
		index main.html;
		autoindex off;
	}
}